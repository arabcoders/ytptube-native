name: Build Native Binaries

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: "Tag to build from main repo"

env:
  PYTHON_VERSION: 3.11
  PNPM_VERSION: 10
  NODE_VERSION: 20

jobs:
  build:
    permissions:
      packages: write
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4
        with:
          repository: arabcoders/ytptube
          ref: ${{ github.event.inputs.tag }}

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb-cursor0 \
            libxkbcommon-x11-0

      - name: Install Qt (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install -y qt6-base-dev

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: "ui/pnpm-lock.yaml"

      - name: Build frontend
        working-directory: ui
        run: |
          pnpm install --production --prefer-offline --frozen-lockfile
          pnpm run generate

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: |
          pip install pipenv
          pipenv install --deploy

      - name: Install PyInstaller + Qt backend
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            pipenv run pip install \
              pyinstaller \
              pywebview \
              QtPy \
              PySide6
          else
            pipenv run pip install pyinstaller pywebview[qt]
          fi        

      - name: Build native binary
        run: |
          pipenv run pyinstaller ./app.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: dist/*
